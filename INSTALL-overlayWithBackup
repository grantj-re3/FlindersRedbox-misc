1. APPLICATION ENVIRONMENT

See INSTALL-overlayPrep.


2. INSTALLATION

See INSTALL-overlayPrep.


3. EXAMPLES


3.1 EXAMPLE INVOCATIONS

Command line invocation.
  overlayWithBackup.sh overlayWithBackup.sh  BASEPATH [ 2>&1 |tee logYYMMDD_HHMM ]

    where BASEPATH.tgz contains the files to overlay (and may also contain
      other files which will not be overlaid using this program)
    and BASEPATH.list.x gives the user-edited list of files/dirs to be
      overlaid.  These files shall be backed up before before a new version
      is overlaid. These files must exist within BASEPATH.tgz.


3.2 SAMPLE INSTALLATION

The purpose of this sample is to demonstrate usage.


Scenario:

 - This application to be installed in $HOME/opt/misc of an unprivileged user.
 - The backup and other files generated by the previously run
   overlayPrep.sh (backup) script were written to directory:
     $HOME/backup/overlay/ands_140210.150710
 - To understand how this program works you probably need to understand
   how its partner program overlayPrep.sh performs a backup. Hence
   run "overlayPrep.sh --help"


Instructions:

  mkdir ~/opt
  git clone https://github.com/grantj-re3/FlindersRedbox-misc.git ~/opt/misc
  cd ~/opt/misc

# If you want a particular version
  git tag # List tagged releases
  git checkout ... # Checkout the desired release

# Read files INSTALL LICENSE README*

# 1) It is not expected that you will need to edit any environment variables
#    within bin/overlayWithBackup.sh

# 2) Backup the part of the filesystem being overlaid/reinstated if you wish.

# 3) View the usage info
  bin/overlayWithBackup.sh

# 4) Make a copy of those files and directories which were previously
#    backed up.
  cd ~/backup/overlay/ands_140210.150710
  cp -vip overlay_redbox.list overlay_redbox.list.x

# 5) Edit overlay_redbox.list.x to remove all paths except those which you
#    wish to overlay/reinstate

# 6) Change directory so that the current working directory is where the
#    tarball files (and files listed in overlay_redbox.list.x) were created.
  cd TOP_OF_TAR_BACKUP

# 7) Overlay/reinstate the files.
#    Note that argument BASEPATH does not correspond to any file, but
#    BASEPATH.list.x and BASEPATH.tgz must exist.
  ~/opt/misc/bin/overlayWithBackup.sh ~/backup/overlay/ands_140210.150710/overlay_redbox 2>&1 |tee ~/tmp/logYYMMYY

#    If all the info looks ok, press 'y' then Enter

# 8) Celebrate!


# Terms used:
# - "Target file" below means a file in the filesystem (not in the
#   tarball) listed in BASEPATH.list.x.
#
# - "Symlink-target" below means a file/dir pointed to by a symlink.
#
# Notes:
# a)  If any of the (selected) files from the tarball is a
#   symlink, after running overlayWithBackup.sh the target file
#   in the filesystem will also be a symlink. This property results
#   from the normal behaviour of (GNU) tar.
#
# b)  If any of the (selected) target files in the filesystem is a symlink,
#   after running overlayWithBackup.sh the target file will have been
#   replaced with the file (symlink or not) from the tarball (and the
#   original symlink-target will not be affected). This property results
#   from the normal behaviour of (GNU) tar.
#
# c)  Files listed in BASEPATH.renamed need to be managed manually.
#   These represent files which (instead of deleting) have been renamed
#   from ORIG to ORIG.dist in order for overlayPrep.sh to track the
#   intention to delete the ORIG file.
#
# d)  If you have renamed the original file (and the .dist version
#   reflects that renaming) then this program may not deal with the
#   situation in the way you intended hence you may have to
#   overlay/reinstate the file manually. Eg.  Say you wish to
#   replace foo-1.1.jar with foo-1.2.jar but:
#   * you wish to keep a backup of foo-1.1.jar (in addition to foo-1.2.jar)
#   * you must not keep foo-1.1.jar in your library directory because
#     having both may result in unexpected side effects
#
#   then you might chose the following solution.
#   * Keep a copy of old jar; ensure extension is not jar otherwise java
#     app will attempt to load it; ensure overlayPrep.sh will back it up.
#       mv -vi foo-1.1.jar foo-1.1.jar.hasBug12345
#       touch foo-1.1.jar.hasBug12345.dist
#   * Get a copy of the new jar; ensure overlayPrep.sh will back it up.
#       cp -vip /download/dir/foo-1.2.jar .
#       touch foo-1.2.jar.dist
#
#   However, running overlayWithBackup.sh would result in:
#   * foo-1.2.jar being correctly reinstated
#   * the backup foo-1.1.jar.hasBug12345 being correctly reinstated
#   * but if file foo-1.1.jar already exists in the filesystem, it
#     will not be renamed/moved so the java app will load both
#     foo-1.2.jar and foo-1.1.jar
#
#   Hence you should manage such scenarios manually.
#
#   A similar and simpler solution (but without backup of the old jar)
#   is shown below.
#   * Keep a copy of old jar; ensure extension is not jar otherwise java
#     app will attempt to load it; it is not a requirement that
#     overlayPrep.sh will back it up.
#       mv -vi foo-1.1.jar foo-1.1.jar.dist
#   * Get a copy of the new jar; ensure overlayPrep.sh will back it up.
#       cp -vip /download/dir/foo-1.2.jar .
#       touch foo-1.2.jar.dist

